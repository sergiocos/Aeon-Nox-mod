<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="Furniture_Showcase">
        <control type="group" id="8857">
            <include>Animation_OpenClose_Furniture</include>
            <include>Animation_VisibleChange400</include>
            <animation effect="slide" end="0,400" time="700" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
            <visible>![Control.IsVisible(516) | Control.IsVisible(514) | [Control.IsVisible(518) + Skin.HasSetting(infopanelbackground)] | [Control.IsVisible(500) + Skin.HasSetting(wallfullscreen)] | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(8858) | [Skin.HasSetting(addonwallaltbackground) + Control.IsVisible(512)]]</visible>
            <control type="image">
                <posy>472</posy>
                <width>1920</width>
                <height>608</height>
                <texture>views/showcase_floor.png</texture>
                <colordiffuse>$VAR[ExtendedColorDiffuseVar]</colordiffuse>
            </control>
            <control type="group" id="8860">
                <visible>![Control.IsVisible(512) | Control.IsVisible(510)  | Control.IsVisible(550)]</visible>
                <animation effect="slide" time="1000" start="1200,0" end="0,0" tween="cubic">WindowOpen</animation>
                <animation effect="slide" time="1000" end="1200,0" tween="cubic">WindowClose</animation>
                <control type="image">
                    <posx>216</posx>
                    <posy>874</posy>
                    <width>1490</width>
                    <height>206</height>
                    <texture>views/showcase_spot.png</texture>
                    <animation effect="fade" start="100" end="50" time="300" condition="!Control.IsVisible(52) + !Control.IsVisible(53) + [ControlGroup(9003).HasFocus | Control.HasFocus(60) | Control.HasFocus(70) | Control.HasFocus(62) | Control.HasFocus(61)]">Conditional</animation>
                    <animation effect="slide" time="200" end="-585" tween="cubic" condition="Control.IsVisible(57)">Conditional</animation>
                    <animation effect="slide" time="200" end="-120" tween="cubic" condition="Control.IsVisible(57) + Skin.HasSetting(smallshiftview)">Conditional</animation>
                    <animation effect="slide" time="200" end="185" tween="cubic" condition="Control.IsVisible(52) | Control.IsVisible(53)">Conditional</animation>
                    <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                </control>
                <control type="image">
                    <posx>-600</posx>
                    <posy>874</posy>
                    <width>2490</width>
                    <height>226</height>
                    <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                    <texture>views/showcase_spot.png</texture>
                    <visible>Control.IsVisible(50)</visible>
                </control>
                <control type="image">
                    <width>880</width>
                    <height>206</height>
                    <posx>1040</posx>
                    <posy>874</posy>
                    <texture>views/list_spot.png</texture>
                    <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                    <animation effect="slide" time="200" end="190" tween="cubic" condition="Control.IsVisible(52) | Control.IsVisible(53)">Conditional</animation>
                    <animation effect="slide" time="200" end="60" tween="cubic" condition="Control.IsVisible(50) + Window.IsActive(musiclibrary)">Conditional</animation>
                    <visible>[Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(53)]</visible>
                    <visible>!Container.Content(years) + !Container.Content(playlists)</visible>
                </control>
            </control>
            <control type="group">
                <visible>![Control.IsVisible(510) | Control.IsVisible(57) | Control.IsVisible(550)]</visible>
                <visible>!Control.HasFocus(109)</visible>
                <animation effect="slide" end="0,-400" time="700" tween="quadratic" condition="Control.HasFocus(109)">Conditional</animation>
                <include>Animation_VisibleChange400</include>
                <control type="image">
                    <width>696</width>
                    <height>1080</height>
                    <texture>views/showcase_vignette.png</texture>
                    <colordiffuse>vignette</colordiffuse>
                    <animation effect="slide" end="-180" condition="Control.IsVisible(512)">Conditional</animation>
                    <animation effect="slide" end="-105" condition="Control.IsVisible(500)">Conditional</animation>
                    <animation type="Conditional" condition="Control.HasFocus(110)">
                        <effect type="fade" start="100" end="0" time="400" easing="inout" tween="cubic" />
                        <effect type="slide" end="-696,0" time="400" easing="inout" tween="cubic" />
                    </animation>
                </control>
                <control type="image">
                    <posx>1224</posx>
                    <width>696</width>
                    <height>1080</height>
                    <colordiffuse>vignette</colordiffuse>
                    <texture flipx="true">views/showcase_vignette.png</texture>
                    <animation effect="slide" end="180" condition="Control.IsVisible(512)">Conditional</animation>
                    <animation effect="slide" end="105" condition="Control.IsVisible(500)">Conditional</animation>
                    <animation type="Conditional" condition="Control.HasFocus(110)">
                        <effect type="fade" start="100" end="0" time="400" easing="inout" tween="cubic" />
                        <effect type="slide" end="696,0" time="400" easing="inout" tween="cubic" />
                    </animation>
                </control>
            </control>
            <control type="image">
                <include>Animation_OpenClose_Furniture</include>
                <visible>[Control.IsVisible(518) + !Skin.HasSetting(infopanelfanart)]| Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(50) | Control.IsVisible(500) | [Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | Control.IsVisible(500) | Control.IsVisible(550)| Control.IsVisible(508)</visible>
                <width>1920</width>
                <height>206</height>
                <posy>874</posy>
                <texture>views/panel_spot.png</texture>
                <colordiffuse>$VAR[SpotColorVar2]</colordiffuse>
                <animation effect="zoom" start="0,874,1920,206" end="0,874,2020,206" time="0" reversible="false" condition="Control.IsVisible(518)">Conditional</animation>
            </control>
            <include>Neon_Floor</include>
        </control>
        <control type="image" id="8858">
            <posy>105</posy>
            <visible>[Control.IsVisible(503) + [Container.Content(tvshows) | Container.Content(movies) | Container.Content(artists)] + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + Skin.HasSetting(altfloor)]</visible>
            <include>Animation_CommonFade</include>
            <animation effect="slide" time="200" end="0,100" tween="cubic" condition="Skin.HasSetting(landscapeonelogo)">Conditional</animation>
            <include>FullscreenDimensions</include>
            <texture>views/logo_back.png</texture>
            <animation effect="fade" start="100" end="80" time="50" condition="Substring(Skin.CurrentTheme,whit)">Conditional</animation>
            <colordiffuse>black</colordiffuse>
        </control>
    </include>
    <include name="PanelSpot">
        <control type="image">
            <width>1920</width>
            <height>206</height>
            <posy>874</posy>
            <texture>views/panel_spot.png</texture>
            <colordiffuse>$VAR[SpotColorVar2]</colordiffuse>
        </control>
    </include>
    <include name="FloorLabels">
        <control type="group">
            <animation effect="fade" end="100" time="100" delay="100" reversible="false">Visible</animation>
            <animation effect="fade" start="100" end="0" time="0" delay="0" reversible="false">Hidden</animation>
            <visible>[Control.IsVisible(503) + Skin.HasSetting(landscapeonelogo) + !Container.Content(episodes)] | Control.IsVisible(509) | [Control.IsVisible(500) + !StringCompare(Container.FolderName,youtube)] | Control.IsVisible(508) | Control.IsVisible(501)</visible>
            <include>Animation_WindowFade200</include>
            <visible>[Control.IsVisible(8822) + !Container.OnNext + !Container.OnPrevious + Stringcompare(Control.GetLabel(8822),empty.png)] | !Control.IsVisible(8822) | Container.Content(seasons) | Container.Content(albums)</visible>
            <control type="label">
                <posx>510</posx>
                <posy>1050</posy>
                <width>900</width>
                <align>center</align>
                <font>Font_Info_Caps</font>
                <textcolor>floor</textcolor>
                <shadowcolor>floorshadow</shadowcolor>
                <visible>![Control.HasFocus(61) | Control.IsVisible(4050)]</visible>
                <include>Animation_VisibleChange400</include>
                <label>$VAR[SecondLabelVar]</label>
            </control>
            <control type="label">
                <posx>510</posx>
                <posy>1012</posy>
                <width>900</width>
                <align>center</align>
                <font>Font_ShowcaseMainLabel2_Caps</font>
                <scroll>true</scroll>
                <scrollspeed>30</scrollspeed>
                <textcolor>floor</textcolor>
                <shadowcolor>floorshadow</shadowcolor>
                <label>$VAR[FirstLabelVar]</label>
            </control>
        </control>
    </include>
    <include name="Furniture_DarkGradient">
        <control type="image">
            <posy>1012</posy>
            <width>1920</width>
            <height>72</height>
            <texture>views/showcase_gradient.png</texture>
            <include>Animation_CommonFade</include>
            <visible>[Control.IsVisible(8857) | Control.IsVisible(8860)] + ![Control.IsVisible(53) | Control.IsVisible(52) | Control.IsVisible(50) | Control.IsVisible(518) | Control.IsVisible(57) | Control.IsVisible(511) | Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(506)  | Control.IsVisible(550)]</visible>
            <animation effect="slide" time="200" end="1440" tween="cubic" condition="Control.IsVisible(510)">Conditional</animation>
            <animation effect="slide" time="200" end="-770" tween="cubic" condition="Control.IsVisible(512)">Conditional</animation>
        </control>
        <control type="image" id="4050">
            <visible>Container.Scrolling</visible>
            <animation effect="fade" end="100" time="0" delay="3000">Visible</animation>
            <animation effect="fade" time="1000">Hidden</animation>
        </control>
        <control type="scrollbar" id="61">
            <posx>458</posx>
            <posy>1035</posy>
            <visible>Control.IsVisible(509) | Control.IsVisible(500) | Control.IsVisible(508) | Control.IsVisible(500) | Control.IsVisible(501) | Control.IsVisible(57) | Control.IsVisible(510) | Control.IsVisible(503)</visible>
            <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(61) | Control.IsVisible(4050)]">Conditional</animation>
            <onup>50</onup>
            <height>40</height>
            <textureslidernib>-</textureslidernib>
            <textureslidernibfocus>-</textureslidernibfocus>
            <orientation>horizontal</orientation>
            <animation effect="zoom" start="70" end="100" center="auto" tween="back" time="400" condition="Control.HasFocus(61) | Control.IsVisible(4050)">Conditional</animation>
            <texturesliderbar border="20,0,20,0">views/scrollbarnub-nofocus.png</texturesliderbar>
            <texturesliderbarfocus border="20,0,20,0">views/scrollbarnub-focus.png</texturesliderbarfocus>
            <texturesliderbackground border="12,0,12,0">views/scrollbarbacklist2.png</texturesliderbackground>
            <ondown condition="!Control.IsVisible(500)">109</ondown>
            <ondown condition="Control.IsVisible(500)">50</ondown>
        </control>
        <control type="image">
            <posy>924</posy>
            <width>1920</width>
            <height>224</height>
            <texture>home/homemenu_gradient.png</texture>
            <visible>Control.IsVisible(57) | Control.IsVisible(550) | Control.IsVisible(50) | Control.IsVisible(52) | Control.IsVisible(53)</visible>
        </control>
        <control type="button" id="109">
            <include>HiddenObject</include>
            <onup>50</onup>
            <ondown>50</ondown>
            <onleft>50</onleft>
            <onright>50</onright>
            <onclick>SetFocus(50)</onclick>
            <onback>50</onback>
        </control>
        <control type="group">
            <visible>Control.HasFocus(109)</visible>
            <include>Animation_WindowFade200</include>
            <animation type="Visible">
                <effect type="zoom" start="150" end="100" center="960,540" time="500" tween="cubic" />
                <effect type="fade" end="100" time="300" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="300" />
                <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
            </animation>
            <posx>20</posx>
            <posy>-1020</posy>
            <control type="image">
                <width>130</width>
                <height>80</height>
                <include>PanelGlowFade</include>
                <texture>dialogs/dialog_back_shadow.png</texture>
                <visible>!Skin.HasSetting(DisableGlowbar)</visible>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
            </control>
            <control type="image">
                <width>130</width>
                <height>80</height>
                <animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
                <texture>dialogs/dialog_back.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
            </control>
            <control type="label">
                <posx>15</posx>
                <width>100</width>
                <height>74</height>
                <font>Font_Reg12</font>
                <textcolor>grey2</textcolor>
                <align>center</align>
                <label>42288</label>
                <fontcolor>white</fontcolor>
                <wrapmultiline>true</wrapmultiline>
            </control>
        </control>
    </include>
    <include name="Furniture_Glow">
        <control type="image">
            <visible>!Control.HasFocus(109)</visible>
            <include>Animation_OpenClose_Furniture</include>
            <include>Animation_VisibleChange400</include>
            <visible>![Control.IsVisible(516) | Control.IsVisible(514) | Control.IsVisible(511) | Control.IsVisible(506) | Control.IsVisible(8858) | [Skin.HasSetting(addonwallaltbackground) + Control.IsVisible(512)]]</visible>
            <posy>-100</posy>
            <width>1920</width>
            <height>608</height>
            <texture flipy="true">views/showcase_glow.png</texture>
            <colordiffuse>$VAR[ExtendedColorDiffuseVar]</colordiffuse>
            <include>Animation_VisibleChange400</include>
            <visible>Skin.HasSetting(ExtendedGlowMode) + ![Control.IsVisible(518) + Skin.HasSetting(infopanelbackground)]</visible>
        </control>
    </include>
    <include name="WallPanel">
        <control type="group">
            <include>Animation_Widgets</include>
            <animation effect="fade" end="100" time="200">Visible</animation>
            <animation effect="fade" start="100" end="0" time="200">Hidden</animation>
            <animation type="Conditional" condition="Control.IsVisible(518) + Skin.HasSetting(infopanelfanart)">
                <effect type="zoom" end="50,100" time="400" easing="in" tween="cubic" />
                <effect type="slide" end="148" time="400" easing="in" tween="cubic" />
            </animation>
            <visible>[Control.IsVisible(512) + !Skin.HasSetting(addonwallaltbackground)] | [Control.IsVisible(500) + !Skin.HasSetting(wallfullscreen)] | [Control.IsVisible(518) + !Skin.HasSetting(infopanelbackground)]</visible>
            <control type="image">
                <posx>112</posx>
                <posy>68</posy>
                <width>1695</width>
                <height>1038</height>
                <texture>wall/wall_bg_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <visible>!Skin.HasSetting(DisableGlowbar)</visible>
                <include>PanelGlowFade</include>
                <animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="300" condition="Control.IsVisible(512)">Conditional</animation>
                <animation effect="zoom" start="112,68,1695,1038" end="136,38,1651,1132" time="300" condition="Control.IsVisible(518)">Conditional</animation>
            </control>
            <control type="image">
                <posx>112</posx>
                <posy>68</posy>
                <width>1695</width>
                <height>1038</height>
                <texture>wall/wall_bg.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                <animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="300" condition="Control.IsVisible(512)">Conditional</animation>
                <animation effect="zoom" start="112,68,1695,1038" end="136,38,1651,1132" time="300" condition="Control.IsVisible(518)">Conditional</animation>
            </control>
            <control type="image">
                <posx>112</posx>
                <posy>68</posy>
                <width>1695</width>
                <height>1038</height>
                <texture>wall/wall_bg_reflection.png</texture>
                <animation effect="zoom" start="112,68,1695,1038" end="38,68,1845,1038" time="300" condition="Control.IsVisible(512)">Conditional</animation>
                <animation effect="zoom" start="112,68,1695,1038" end="136,38,1651,1132" time="300" condition="Control.IsVisible(518)">Conditional</animation>
            </control>
            <include condition="Skin.HasSetting(effect_bg)">BG_Effect_Wall_Panel</include>
        </control>
    </include>
    <include name="OverlayVisibility-7">
        <texture>$INFO[ListItem(-7).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-7).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-7).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-7).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-7).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-6">
        <texture>$INFO[ListItem(-6).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-6).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-6).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-6).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-6).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-5">
        <texture>$INFO[ListItem(-5).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-5).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-5).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-5).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-5).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-4">
        <texture>$INFO[ListItem(-4).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-4).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-4).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-4).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-4).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-3">
        <texture>$INFO[ListItem(-3).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-3).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-3).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-3).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-3).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-2">
        <texture>$INFO[ListItem(-2).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-2).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-2).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-2).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-2).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility-1">
        <texture>$INFO[ListItem(-1).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(-1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(-1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(-1).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(-1).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(-1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(-1).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(-1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(-1).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility0">
        <texture>$INFO[ListItem(0).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(0).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(0).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(0).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(0).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(0).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(0).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(0).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(0).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility1">
        <texture>$INFO[ListItem(1).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(1).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(1).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(1).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(1).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(1).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(1).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(1).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(1).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility2">
        <texture>$INFO[ListItem(2).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(2).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(2).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(2).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(2).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(2).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(2).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(2).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(2).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility3">
        <texture>$INFO[ListItem(3).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(3).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(3).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(3).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(3).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(3).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(3).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(3).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(3).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility4">
        <texture>$INFO[ListItem(4).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(4).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(4).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(4).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(4).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(4).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(4).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(4).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(4).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility5">
        <texture>$INFO[ListItem(5).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(5).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(5).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(5).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(5).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(5).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(5).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(5).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(5).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility6">
        <texture>$INFO[ListItem(6).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(6).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(6).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(6).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(6).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(6).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(6).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(6).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(6).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility7">
        <texture>$INFO[ListItem(7).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(7).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(7).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(7).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(7).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(7).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(7).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(7).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(7).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility8">
        <texture>$INFO[ListItem(8).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(8).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(8).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(8).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(8).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(8).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(8).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(8).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(8).Title)]]]]</visible>
    </include>
    <include name="OverlayVisibility9">
        <texture>$INFO[ListItem(9).Overlay,thumbs/]</texture>
        <visible>[Skin.HasSetting(watchedoverlay) + SubString(ListItem(9).Overlay,OverlayWatched.png)] | [Skin.HasSetting(newstatus) + SubString(ListItem(9).Overlay,OverlayUnWatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem(9).Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem(9).Label)]] | [[Container.Content(tvshows) | Container.Content(seasons)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem(9).TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem(9).TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem(9).Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem(9).Title)]]]]</visible>
    </include>
    <include name="ReloadWindowOnClick">
        <onclick condition="Window.IsActive(addonbrowser)">SetProperty(activewindow,addons,home)</onclick>
        <onclick condition="Window.IsActive(musicfiles)">SetProperty(activewindow,musicfiles,home)</onclick>
        <onclick condition="Window.IsActive(musiclibrary)">SetProperty(activewindow,musiclibrary,home)</onclick>
        <onclick condition="Window.IsActive(musicplaylist)">SetProperty(activewindow,musicplaylist,home)</onclick>
        <onclick condition="Window.IsActive(videoplaylist)">SetProperty(activewindow,videoplaylist,home)</onclick>
        <onclick condition="Window.IsActive(videos)">SetProperty(activewindow,videos,home)</onclick>
        <onclick condition="Window.IsActive(programs)">SetProperty(activewindow,programs,home)</onclick>
        <onclick>SetProperty(containerpath,$INFO[Container.FolderPath],home)</onclick>
        <onclick>Dialog.Close(1126)</onclick>
        <onclick>ReplaceWindow(1141)</onclick>
    </include>
    <include name="ShowcaseInfoPaneMovies">
        <control type="group" id="7550">
            <visible>Control.IsVisible(197) | Control.HasFocus(7000) | Stringcompare(Control.GetLabel(4421),infopanelon)</visible>
            <visible>Control.IsVisible(9900)</visible>
            <visible>Control.IsVisible(508) | Control.IsVisible(503) | Control.IsVisible(509) | Control.IsVisible(501) | [Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]</visible>
            <animation effect="slide" start="0,-1200" end="0,0" time="750" tween="cubic">VisibleChange</animation>
            <animation effect="slide" end="0,45" time="400" easing="inout" tween="cubic" condition="Control.IsVisible(503) | Control.IsVisible(508)">Conditional</animation>
            <animation effect="fade" time="250">WindowOpen</animation>
            <animation effect="slide" end="0,-1000" time="300" easing="in" tween="cubic">WindowClose</animation>
            <animation effect="slide" end="0,35" time="500" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
            <animation effect="slide" end="0,60" time="500" easing="in" tween="cubic" condition="[Control.IsVisible(57) + Skin.HasSetting(smallshiftview)]">Conditional</animation>
            <animation effect="slide" end="0,65" time="500" easing="in" tween="cubic" condition="!Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)] + [Container.Content(tvshows) | Container.Content(movies)]">Conditional</animation>
            <animation effect="zoom" end="113" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel)">Conditional</animation>
            <posy>39</posy>
            <width>1920</width>
            <height>750</height>
            <control type="group">
                <visible>!Skin.HasSetting(no_infopane_panel)</visible>
                <include>Animation_VisibleChange400</include>
                <control type="image">
                    <posx>112</posx>
                    <width>1695</width>
                    <height>1050</height>
                    <visible>!Skin.HasSetting(DisableGlowbar)</visible>
                    <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                    <include>PanelGlowFade</include>
                    <texture>wall/wall_bg_glow.png</texture>
                </control>
                <control type="image">
                    <posx>112</posx>
                    <width>1695</width>
                    <height>1050</height>
                    <texture>wall/wall_bg.png</texture>
                    <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                </control>
            </control>
            <control type="image">
                <posy>8</posy>
                <posx>112</posx>
                <width>1695</width>
                <height>750</height>
                <fadetime>400</fadetime>
                <texture>$VAR[InfoPanelLayoutVar]</texture>
            </control>
            <control type="image">
                <posx>165</posx>
                <posy>100</posy>
                <width>1600</width>
                <height>280</height>
                <texture background="true">$VAR[TVShowLogoVar]</texture>
                <fadetime>300</fadetime>
                <animation effect="fade" start="100" end="17" time="50" condition="true">Conditional</animation>
                <aspectratio align="bottom">keep</aspectratio>
                <visible>![[Container.Content(tvshows) | Container.Content(movies) | Container.Content(artists)] + Control.IsVisible(503) + [Skin.HasSetting(landscapelogo) | Skin.HasSetting(landscapeonelogo)]]</visible>
                <visible>!Control.isVisible(8822)</visible>
                <animation type="Conditional" condition="Stringcompare(Control.GetLabel(4420),fanart) | Container.Content(seasons) | Container.Content(episodes)">
                    <effect type="slide" end="-480,160" time="0" />
                    <effect type="zoom" start="100" end="83" time="0" tween="cubic" easing="inout" center="auto" />
                </animation>
                <include>Animation_VisibleChange400</include>
            </control>
            <include condition="Skin.HasSetting(effect_bg)">BG_Effect_Showcase_Panel</include>
            <control type="image">
                <posx>1747</posx>
                <posy>15</posy>
                <width>45</width>
                <height>45</height>
                <texture>$VAR[WatchedIconVar]</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <visible>!StringCompare(ListItem.Overlay,OverlayWatched.png) | Container.ListItem.IsResumable</visible>
            </control>
            <control type="group">
                <visible>Container.Content(movies) | [Container.Content(tvshows) + Control.isVisible(8858)]</visible>
                <visible>!Skin.HasSetting(no_infopane_panel)</visible>
                <include>Animation_VisibleChange400</include>
                <control type="label">
                    <posx>170</posx>
                    <posy>12</posy>
                    <width>1580</width>
                    <height>42</height>
                    <scroll>true</scroll>
                    <align>center</align>
                    <label>$VAR[LandscapeLogoPanelLabelVar]</label>
                    <textcolor>grey2</textcolor>
                </control>
            </control>
            <control type="image">
                <posx>909</posx>
                <posy>69</posy>
                <width>798</width>
                <height>454</height>
                <aspectratio align="center">scale</aspectratio>
                <fadetime>FanartCrossfadeTime</fadetime>
                <texture background="true" fallback="special://skin/backgrounds/fallback_movies.jpg">$VAR[FanartTextureVar]</texture>
                <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                <bordersize>7</bordersize>
                <animation effect="zoom" end="111" center="460,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(no_infopane_panel) + Control.IsVisible(503)">Conditional</animation>
                <visible>StringCompare(Control.GetLabel(4420),fanart)</visible>
                <animation type="VisibleChange">
                    <effect type="fade" end="100" delay="400" time="200" />
                </animation>
            </control>
            <control type="group">
                <visible>StringCompare(Control.GetLabel(4420),fanart) | StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
                <posx>158</posx>
                <posy>63</posy>
                <animation effect="slide" end="472,0" time="0" easing="inout" tween="cubic" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo + StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
                <animation type="VisibleChange">
                    <effect type="fade" end="100" delay="400" time="200" />
                </animation>
                <control type="label">
                    <posy>-4</posy>
                    <height>20</height>
                    <width>420</width>
                    <aligny>top</aligny>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail1Var]</label>
                </control>
                <control type="label">
                    <posy>30</posy>
                    <height>20</height>
                    <width>300</width>
                    <aligny>top</aligny>
                    <scroll>true</scroll>
                    <label fallback="31006">$VAR[FanartPanelValue1Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>-4</posy>
                    <height>20</height>
                    <aligny>top</aligny>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail2Var]</label>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>30</posy>
                    <height>20</height>
                    <width>300</width>
                    <aligny>top</aligny>
                    <scroll>true</scroll>
                    <label fallback="31006">$VAR[FanartPanelValue2Var]</label>
                </control>
                <control type="label">
                    <posy>67</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail3Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posy>101</posy>
                    <height>20</height>
                    <width>300</width>
                    <scroll>true</scroll>
                    <label fallback="31006">$VAR[FanartPanelValue3Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>67</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail4Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="fadelabel">
                    <posx>352</posx>
                    <posy>101</posy>
                    <height>20</height>
                    <width>300</width>
                    <scrollspeed>200</scrollspeed>
                    <pauseatend>3000</pauseatend>
                    <label>$INFO[ListItem.RatingAndVotes]</label>
                    <label>$LOCALIZE[13409] #$INFO[ListItem.Top250]</label>
                    <visible>!IsEmpty(ListItem.Top250)</visible>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>101</posy>
                    <height>20</height>
                    <width>300</width>
                    <scroll>true</scroll>
                    <label fallback="31006">$VAR[FanartPanelValue4Var]</label>
                    <visible>IsEmpty(ListItem.Top250)</visible>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posy>138</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail5Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posy>174</posy>
                    <height>20</height>
                    <width>300</width>
                    <scroll>true</scroll>
                    <label fallback="31006">$VAR[FanartPanelValue5Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>138</posy>
                    <height>20</height>
                    <width>420</width>
                    <textcolor>$VAR[SubTitleColorVar]</textcolor>
                    <label>$VAR[FanartPanelDetail6Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="label">
                    <posx>352</posx>
                    <posy>174</posy>
                    <height>20</height>
                    <width>300</width>
                    <scroll>true</scroll>
                    <label fallback="31006">$VAR[FanartPanelValue6Var]</label>
                    <aligny>top</aligny>
                </control>
                <control type="textbox">
                    <posy>226</posy>
                    <width>652</width>
                    <height>230</height>
                    <label>$VAR[FanartPanelPlotVar]</label>
                    <textcolor>white6</textcolor>
                    <autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                    <aligny>top</aligny>
                </control>
            </control>
            <control type="group">
                <visible>StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)</visible>
                <animation type="VisibleChange">
                    <effect type="fade" end="100" delay="400" time="200" />
                </animation>
                <control type="image">
                    <posx>1400</posx>
                    <posy>63</posy>
                    <width>323</width>
                    <height>470</height>
                    <fadetime>200</fadetime>
                    <texture background="true" diffuse="thumbs/movieposter_mask.png">$VAR[ListPosterVar]</texture>
                    <aspectratio scalediffuse="false" align="center">scale</aspectratio>
                    <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                    <bordersize>7</bordersize>
                    <visible>StringCompare(Control.GetLabel(4420),poster)</visible>
                </control>
                <control type="image">
                    <posx>1387.5</posx>
                    <posy>50.5</posy>
                    <width>348</width>
                    <height>495</height>
                    <texture diffuse="thumbs/movieposter_mask.png">thumbs/thumb_glass.png</texture>
                    <bordertexture border="19.5">thumbs/poster_shadow.png</bordertexture>
                    <bordersize>19.5</bordersize>
                    <visible>StringCompare(Control.GetLabel(4420),poster)</visible>
                </control>
                <control type="group">
                    <posx>158</posx>
                    <posy>60</posy>
                    <control type="label">
                        <posy>-6</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <aligny>top</aligny>
                        <label>$VAR[FanartPanelDetail1Var]</label>
                    </control>
                    <control type="label">
                        <posy>28</posy>
                        <height>20</height>
                        <width>420</width>
                        <scroll>true</scroll>
                        <label fallback="31006">$VAR[FanartPanelValue1Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>64</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <label>$VAR[FanartPanelDetail2Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>98</posy>
                        <height>20</height>
                        <width>420</width>
                        <scroll>true</scroll>
                        <label fallback="31006">$VAR[FanartPanelValue2Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>132</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <label>$VAR[PosterPanelDetail3Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>166</posy>
                        <height>20</height>
                        <width>420</width>
                        <scroll>true</scroll>
                        <label fallback="31006">$VAR[PosterPanelValue3Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>198</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <label>$VAR[FanartPanelDetail4Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="fadelabel">
                        <posy>228</posy>
                        <height>20</height>
                        <width>422</width>
                        <pauseatend>3000</pauseatend>
                        <label fallback="31006">$VAR[PosterPanelValue4Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>264</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <label>$VAR[PosterPanelDetail5Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>298</posy>
                        <height>20</height>
                        <width>300</width>
                        <scroll>true</scroll>
                        <label fallback="31006">$VAR[PosterPanelValue5Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>330</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <label>$VAR[PosterPanelDetail6Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>364</posy>
                        <height>20</height>
                        <width>420</width>
                        <scroll>true</scroll>
                        <label fallback="31006">$VAR[PosterPanelValue6Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>400</posy>
                        <height>20</height>
                        <width>420</width>
                        <textcolor>$VAR[SubTitleColorVar]</textcolor>
                        <label>$VAR[PosterPanelDetail7Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="label">
                        <posy>434</posy>
                        <height>20</height>
                        <width>420</width>
                        <scroll>true</scroll>
                        <label fallback="31452">$VAR[PosterPanelValue7Var]</label>
                        <aligny>top</aligny>
                    </control>
                    <control type="textbox" id="5777">
                        <posx>480</posx>
                        <posy>2</posy>
                        <width>657</width>
                        <height>393</height>
                        <label fallback="31006">$VAR[FanartPanelPlotVar]</label>
                        <textcolor>white6</textcolor>
                        <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo">Conditional</animation>
                        <autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                        <visible>!Control.IsVisible(503)</visible>
                        <visible>[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                    </control>
                    <control type="textbox">
                        <posx>486</posx>
                        <posy>2</posy>
                        <width>657</width>
                        <height>460</height>
                        <label fallback="31006">$VAR[FanartPanelPlotVar]</label>
                        <textcolor>white6</textcolor>
                        <animation effect="fade" start="100" end="0" time="1100" condition="Player.HasVideo">Conditional</animation>
                        <autoscroll delay="8000" time="AutoScrollTime" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
                        <visible>!Control.IsVisible(5777)</visible>
                    </control>
                </control>
            </control>
            <control type="group">
                <visible>Container.Content(movies)</visible>
                <control type="group">
                    <posx>155</posx>
                    <visible>StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
                    <animation type="VisibleChange">
                        <effect type="fade" end="100" delay="400" time="200" />
                    </animation>
                    <control type="image">
                        <posy>62</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">scale</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb3.jpg]</texture>
                        <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                        <bordersize>7</bordersize>
                    </control>
                    <control type="image">
                        <posy>315</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">scale</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb4.jpg]</texture>
                        <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                        <bordersize>7</bordersize>
                    </control>
                </control>
                <control type="group">
                    <posx>1363</posx>
                    <visible>SubString(Control.GetLabel(4420),thumbs)</visible>
                    <animation type="VisibleChange">
                        <effect type="fade" end="100" delay="400" time="200" />
                    </animation>
                    <control type="image">
                        <posy>62</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">scale</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb1.jpg]</texture>
                        <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                        <bordersize>7</bordersize>
                    </control>
                    <control type="image">
                        <posy>315</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">scale</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Path,,extrathumbs/thumb2.jpg]</texture>
                        <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                        <bordersize>7</bordersize>
                    </control>
                </control>
            </control>
            <control type="group">
                <visible>Container.Content(tvshows) + StringCompare(Control.GetLabel(4420),fourthumbs)</visible>
                <animation type="VisibleChange">
                    <effect type="fade" end="100" delay="400" time="200" />
                </animation>
                <control type="group">
                    <posx>155</posx>
                    <control type="image">
                        <posy>62</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio align="center">keep</aspectratio>
                        <fadetime>400</fadetime>
                        <texture>$VAR[InfoPanelCharacterArtVar]</texture>
                    </control>
                    <control type="image">
                        <posy>315</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">scale</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Art(fanart)]</texture>
                        <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                        <bordersize>7</bordersize>
                    </control>
                </control>
                <control type="group">
                    <posx>1363</posx>
                    <control type="image">
                        <posy>62</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">keep</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Art(clearart)]</texture>
                        <bordersize>7</bordersize>
                    </control>
                    <control type="image">
                        <posy>315</posy>
                        <width>391</width>
                        <height>220</height>
                        <aspectratio aligny="top">keep</aspectratio>
                        <fadetime>400</fadetime>
                        <texture fallback="fallback.png" background="true">$INFO[ListItem.Art(landscape)]</texture>
                        <bordertexture border="7">thumbs/thumbshadow.png</bordertexture>
                        <bordersize>7</bordersize>
                    </control>
                </control>
            </control>
            <control type="group">
                <posx>915</posx>
                <posy>75</posy>
                <animation effect="slide" end="-348,-22" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
                <animation effect="zoom" center="auto" start="100" end="92" time="600" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),poster) | StringCompare(Control.GetLabel(4420),extrathumbs)">Conditional</animation>
                <animation effect="slide" end="-358,-38" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
                <animation effect="zoom" center="auto" start="100" end="88" time="600" tween="back" reversible="false" condition="StringCompare(Control.GetLabel(4420),fourthumbs)">Conditional</animation>
                <visible>Player.HasVideo</visible>
                <animation effect="fade" end="100" time="0" delay="1100">Visible</animation>
                <control type="image">
                    <width>786</width>
                    <height>442</height>
                    <texture>common/black.png</texture>
                </control>
                <control type="videowindow" id="2">
                    <width>786</width>
                    <height>442</height>
                </control>
            </control>
        </control>
    </include>
    <include name="Topbar">
        <width>1920</width>
        <height>40</height>
        <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
        <include>Animation_VisibleChange400</include>
    </include>
    <include name="Neon_Topbar">
        <control type="group">
            <visible>!Skin.HasSetting(DisableGlowbar)</visible>
            <include>Animation_VisibleChange400</include>
            <control type="image">
                <posy>22</posy>
                <include>Topbar</include>
                <texture>common/topbar_left.png</texture>
                <include>TopbarPulseAnimationLeft</include>
            </control>
            <control type="image">
                <posy>22</posy>
                <include>Topbar</include>
                <texture>common/topbar_right.png</texture>
                <include>TopbarPulseAnimationRight</include>
            </control>
        </control>
    </include>
    <include name="Neon_VerticalBar">
        <control type="group">
            <visible>!Skin.HasSetting(DisableGlowbar)</visible>
            <include>Animation_VisibleChange400</include>
            <control type="image">
                <width>40</width>
                <height>1080</height>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <texture>common/topbar_top.png</texture>
                <include>TopbarPulseAnimationLeft</include>
            </control>
            <control type="image">
                <width>40</width>
                <height>1080</height>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <texture>common/topbar_down.png</texture>
                <include>TopbarPulseAnimationRight</include>
            </control>
        </control>
    </include>
    <include name="Neon_Floor">
        <control type="group">
            <visible>!Skin.HasSetting(DisableGlowbar) | [Skin.HasSetting(DisableGlowbar) + Skin.HasSetting(ExtendedGlowMode)]</visible>
            <control type="image">
                <posy>854</posy>
                <include>Topbar</include>
                <texture>common/topbar_left.png</texture>
                <include>TopbarPulseAnimationLeft</include>
            </control>
            <control type="image">
                <posy>854</posy>
                <include>Topbar</include>
                <texture>common/topbar_right.png</texture>
                <include>TopbarPulseAnimationRight</include>
            </control>
        </control>
    </include>
    <include name="Neon_LowList">
        <control type="group">
            <visible>!Skin.HasSetting(DisableGlowbar)</visible>
            <control type="image">
                <posy>735</posy>
                <include>Topbar</include>
                <texture>common/topbar_left.png</texture>
                <include>TopbarPulseAnimationLeft</include>
            </control>
            <control type="image">
                <posy>735</posy>
                <include>Topbar</include>
                <texture>common/topbar_right.png</texture>
                <include>TopbarPulseAnimationRight</include>
            </control>
        </control>
    </include>
    <include name="Neon_Home">
        <control type="group">
            <visible>!Skin.HasSetting(DisableGlowbar)</visible>
            <include>Animation_VisibleChange400</include>
            <control type="image">
                <posy>494</posy>
                <include>Topbar</include>
                <texture>common/topbar_left.png</texture>
                <include>TopbarPulseAnimationLeft</include>
            </control>
            <control type="image">
                <posy>494</posy>
                <include>Topbar</include>
                <texture>common/topbar_right.png</texture>
                <include>TopbarPulseAnimationRight</include>
            </control>
            <control type="image">
                <posy>590</posy>
                <include>Topbar</include>
                <texture>common/topbar_left.png</texture>
                <include>TopbarPulseAnimationLeft</include>
            </control>
            <control type="image">
                <posy>590</posy>
                <include>Topbar</include>
                <texture>common/topbar_right.png</texture>
                <include>TopbarPulseAnimationRight</include>
            </control>
        </control>
    </include>
</includes>