<?xml version="1.0" encoding="utf-8"?>
<window>
    <defaultcontrol always="true">9004</defaultcontrol>
    <backgroundcolor>backgroundcolor</backgroundcolor>
    <include condition="!Skin.HasSetting(firstrun4.0)">AutoConfig</include>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + [Substring(Skin.String(widgetlist),recentpics) | Substring(Skin.String(widget2list),recentpics) | Substring(Skin.String(backgroundlist),recentpics)]">RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Latest'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + [Substring(Skin.String(widgetlist),randompics) | Substring(Skin.String(widget2list),randompics) | Substring(Skin.String(backgroundlist),randompics)]">RunScript(plugin.image.mypicsdb,0,?action='setproperties'&amp;method='Random'&amp;sort='Added'&amp;limit=10)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + [Substring(Skin.String(widgetlist),random) | Substring(Skin.String(widget2list),random) | Substring(Skin.String(backgroundlist),random)]">SetProperty(SkinWidgets_RandomItems_Update,true)</onload>
    <onload>ClearProperty(DontRunTVShowScripts,Home)</onload>
    <onload>AlarmClock(BGMove,Control.Move(4324,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTileLeft,Control.Move(5001,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTileRight,Control.Move(5003,1),00:10,silent,loop)</onload>
    <onload>AlarmClock(HomeTileMid,Control.Move(5002,1),00:15,silent,loop)</onload>
    <onload>AlarmClock(HomeTile2Left,Control.Move(6001,1),00:07,silent,loop)</onload>
    <onload>AlarmClock(HomeTile2Right,Control.Move(6003,1),00:10,silent,loop)</onload>
    <onload>AlarmClock(HomeTile2Mid,Control.Move(6002,1),00:15,silent,loop)</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist1.Call),random)">$INFO[Skin.String(SmartPlaylist1.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist2.Call),random)">$INFO[Skin.String(SmartPlaylist2.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist3.Call),random)">$INFO[Skin.String(SmartPlaylist3.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist4.Call),random)">$INFO[Skin.String(SmartPlaylist4.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist5.Call),random)">$INFO[Skin.String(SmartPlaylist5.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist6.Call),random)">$INFO[Skin.String(SmartPlaylist6.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist7.Call),random)">$INFO[Skin.String(SmartPlaylist7.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist8.Call),random)">$INFO[Skin.String(SmartPlaylist8.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist9.Call),random)">$INFO[Skin.String(SmartPlaylist9.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist10.Call),random)">$INFO[Skin.String(SmartPlaylist10.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist11.Call),random)">$INFO[Skin.String(SmartPlaylist11.Call)]</onload>
    <onload condition="!Window.Previous(startup) + Skin.HasSetting(randomizehome) + Substring(Skin.String(SmartPlaylist12.Call),random)">$INFO[Skin.String(SmartPlaylist12.Call)]</onload>
    <onunload>CancelAlarm(HomeTileLeft,true)</onunload>
    <onunload>CancelAlarm(HomeTileRight,true)</onunload>
    <onunload>CancelAlarm(HomeTileMid,true)</onunload>
    <onunload>CancelAlarm(HomeTile2Left,true)</onunload>
    <onunload>CancelAlarm(HomeTile2Right,true)</onunload>
    <onunload>CancelAlarm(HomeTile2Mid,true)</onunload>
    <onunload>CancelAlarm(WidgetMove,true)</onunload>
    <onunload>CancelAlarm(Widget2Move,true)</onunload>
    <onunload>CancelAlarm(BGMove,true)</onunload>
    <onunload>ClearProperty(PanelWidgetInfo,Home)</onunload>
    <onunload>ClearProperty(PanelWidget2Info,Home)</onunload>
    <allowoverlay>yes</allowoverlay>
    <controls>
        <control type="button" id="9004">
            <include>HiddenObject</include>
            <onfocus condition="Window.Previous(startup) + !IsEmpty(Skin.String(CustomFocusOffset))">$VAR[HomeCustomStartupFocus]</onfocus>
            <onfocus>SetFocus(9000)</onfocus>
            <onleft>SetFocus(9000)</onleft>
            <onright>SetFocus(9000)</onright>
            <ondown>SetFocus(9000)</ondown>
            <onup>SetFocus(9000)</onup>
            <onclick>SetFocus(9000)</onclick>
        </control>
        <control type="button" id="9006">
            <include>HiddenObject</include>
            <onfocus>SetFocus(9000)</onfocus>
            <onfocus condition="Stringcompare(Container(9000).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(9000).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(9000).ListItem.Property(Path),videodb://1/)">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
            <!--             <onclick condition="IsEmpty(Skin.String(TVShowHomeItem.Type)) + !Library.HasContent(TVShows)">Notification($LOCALIZE[257],$LOCALIZE[42295])</onclick>
 -->
            <onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),0) | stringcompare(Container(9000).ListItem.Property(Type),1) | stringcompare(Container(9000).ListItem.Property(Type),2) | stringcompare(Container(9000).ListItem.Property(Type),3)">RunAddon($INFO[Container(9000).ListItem.Property(Path)])</onfocus>
            <onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),4)">ActivateWindow(Videos,$INFO[Container(9000).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),5)">ActivateWindow(MusicLibrary,$INFO[Container(9000).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="stringcompare(Container(9000).ListItem.Property(Type),6) | Stringcompare(Container(9000).ListItem.Property(Type),7)  | Stringcompare(Container(9000).ListItem.Property(Type),custom)">$INFO[Container(9000).ListItem.Property(Path)]</onfocus>
        </control>
        <control type="button" id="9007">
            <include>HiddenObject</include>
            <onfocus condition="Control.IsVisible(5000)">SetFocus(5010)</onfocus>
            <onfocus condition="Control.IsVisible(5000) + [Stringcompare(Container(5010).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(5010).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(5010).ListItem.Property(Path),videodb://1/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
            <onfocus condition="Control.IsVisible(5000) + [stringcompare(Container(5010).ListItem.Property(Type),0) | stringcompare(Container(5010).ListItem.Property(Type),1) | stringcompare(Container(5010).ListItem.Property(Type),2) | stringcompare(Container(5010).ListItem.Property(Type),3)]">RunAddon($INFO[Container(5010).ListItem.Property(Path)])</onfocus>
            <onfocus condition="Control.IsVisible(5000) + stringcompare(Container(5010).ListItem.Property(Type),4)">ActivateWindow(Videos,$INFO[Container(5010).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(5000) + stringcompare(Container(5010).ListItem.Property(Type),5)">ActivateWindow(MusicLibrary,$INFO[Container(5010).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(5000) + [stringcompare(Container(5010).ListItem.Property(Type),6) | Stringcompare(Container(5010).ListItem.Property(Type),7)  | Stringcompare(Container(5010).ListItem.Property(Type),custom)]">$INFO[Container(5010).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(5000) + IsEmpty(Container(5010).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
            <onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
            <onfocus condition="Control.IsVisible(8998) + [Stringcompare(Container(8000).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(8000).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(8000).ListItem.Property(Path),videodb://1/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
            <onfocus condition="Control.IsVisible(8998) + [stringcompare(Container(8000).ListItem.Property(Type),0) | stringcompare(Container(8000).ListItem.Property(Type),1) | stringcompare(Container(8000).ListItem.Property(Type),2) | stringcompare(Container(8000).ListItem.Property(Type),3)]">RunAddon($INFO[Container(8000).ListItem.Property(Path)])</onfocus>
            <onfocus condition="Control.IsVisible(8998) + stringcompare(Container(8000).ListItem.Property(Type),4)">ActivateWindow(Videos,$INFO[Container(8000).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(8998) + stringcompare(Container(8000).ListItem.Property(Type),5)">ActivateWindow(MusicLibrary,$INFO[Container(8000).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(8998) + [stringcompare(Container(8000).ListItem.Property(Type),6) | Stringcompare(Container(8000).ListItem.Property(Type),7)  | Stringcompare(Container(8000).ListItem.Property(Type),custom)]">$INFO[Container(8000).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(8998) + IsEmpty(Container(8000).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
        </control>
        <control type="button" id="9008">
            <include>HiddenObject</include>
            <onfocus>SetFocus(6010)</onfocus>
            <onfocus condition="Control.IsVisible(6000)">SetFocus(6010)</onfocus>
            <onfocus condition="Control.IsVisible(6000) + [Stringcompare(Container(6010).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(6010).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(6010).ListItem.Property(Path),videodb://1/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
            <onfocus condition="Control.IsVisible(6000) + [stringcompare(Container(6010).ListItem.Property(Type),0) | stringcompare(Container(6010).ListItem.Property(Type),1) | stringcompare(Container(6010).ListItem.Property(Type),2) | stringcompare(Container(6010).ListItem.Property(Type),3)]">RunAddon($INFO[Container(6010).ListItem.Property(Path)])</onfocus>
            <onfocus condition="Control.IsVisible(6000) + stringcompare(Container(6010).ListItem.Property(Type),4)">ActivateWindow(Videos,$INFO[Container(6010).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(6000) + stringcompare(Container(6010).ListItem.Property(Type),5)">ActivateWindow(MusicLibrary,$INFO[Container(6010).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(6000) + [stringcompare(Container(6010).ListItem.Property(Type),6) | Stringcompare(Container(6010).ListItem.Property(Type),7)  | Stringcompare(Container(6010).ListItem.Property(Type),custom)]">$INFO[Container(6010).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(6000) + IsEmpty(Container(6010).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
            <onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
            <onfocus condition="Control.IsVisible(7998) + [Stringcompare(Container(7000).ListItem.Property(Path),ActivateWindow(Videos,MovieTitles,return)) | Stringcompare(Container(7000).ListItem.Property(Path),ActivateWindow(Videos,MusicVideoTitles,return)) | Substring(Container(7000).ListItem.Property(Path),videodb://1/)]">SetProperty(DontRunTVShowScripts,True,Home)</onfocus>
            <onfocus condition="Control.IsVisible(7998) + [stringcompare(Container(7000).ListItem.Property(Type),0) | stringcompare(Container(7000).ListItem.Property(Type),1) | stringcompare(Container(7000).ListItem.Property(Type),2) | stringcompare(Container(7000).ListItem.Property(Type),3)]">RunAddon($INFO[Container(7000).ListItem.Property(Path)])</onfocus>
            <onfocus condition="Control.IsVisible(7998) + stringcompare(Container(7000).ListItem.Property(Type),4)">ActivateWindow(Videos,$INFO[Container(7000).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(7998) + stringcompare(Container(7000).ListItem.Property(Type),5)">ActivateWindow(MusicLibrary,$INFO[Container(7000).ListItem.Property(Path)],return)</onfocus>
            <onfocus condition="Control.IsVisible(7998) + [stringcompare(Container(7000).ListItem.Property(Type),6) | Stringcompare(Container(7000).ListItem.Property(Type),7)  | Stringcompare(Container(7000).ListItem.Property(Type),custom)]">$INFO[Container(7000).ListItem.Property(Path)]</onfocus>
            <onfocus condition="Control.IsVisible(7998) + IsEmpty(Container(7000).ListItem.Property(Type))">ActivateWindow(1135)</onfocus>
        </control>
        <control type="button" id="9009">
            <include>HiddenObject</include>
            <onfocus>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onfocus>
            <onfocus>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onfocus>
            <onfocus>SetFocus(9000)</onfocus>
            <onfocus condition="Skin.HasSetting(featureddialog)">ActivateWindow(1115)</onfocus>
        </control>
        <control type="button" id="9011">
            <include>HiddenObject</include>
            <onfocus condition="Control.IsVisible(2020)">SetFocus(2020)</onfocus>
            <onfocus condition="!Control.IsVisible(2020)">SetFocus(9000)</onfocus>
        </control>
        <include>MainMenuCommonContent</include>
        <!-- Fanart -->
        <control type="group">
            <!--              <visible>![[Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo)] | [Player.HasAudio + !Skin.HasSetting(ShowBackgroundVis)]]</visible>
 -->
            <control type="multiimage">
                <fadetime>600</fadetime>
                <imagepath background="true">$VAR[HomeMainFanartVar]</imagepath>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <animation effect="fade" time="600">Visible</animation>
                <animation effect="fade" time="600">Hidden</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="15000" pulse="true" delay="600" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
                <animation effect="slide" start="-15,-15" end="15,15" time="7500" pulse="true" delay="600" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
                <visible>!Substring(Control.GetLabel(4322),case)</visible>
            </control>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <include>Animation_WindowFade250</include>
                <aspectratio align="center" aligny="top">scale</aspectratio>
                <texture background="true" fallback="special://skin/backgrounds/speakergrill.jpg">$INFO[Skin.String(LiveBG)]</texture>
                <animation effect="fade" time="500">Visible</animation>
                <animation effect="fade" time="500">Hidden</animation>
                <visible>Substring(Control.GetLabel(4322),case)</visible>
            </control>
            <include condition="SubString(Skin.String(backgroundlist),dvdcase)">InteractiveCasesBackground</include>
            <include condition="SubString(Skin.String(backgroundlist), case)">LiveCDCasesbackground</include>
            <include condition="SubString(Skin.String(backgroundlist), nocase)">LiveNoCasesbackground</include>
            <include condition="[Skin.HasSetting(homecdwall) | SubString(Skin.String(backgroundlist),cdwall)] + !IsEmpty(Skin.String(CDWall_Folder_Path))">cdwall-musicvisualisation</include>
            <include condition="SubString(Skin.String(backgroundlist),moviewall) + !IsEmpty(Skin.String(MovieWall_Folder_Path))">MovieWall</include>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <texture background="true">$VAR[HomeWidgetFanartVar]</texture>
                <visible>[Control.HasFocus(8000) | Control.HasFocus(7000) | ControlGroup(5000).HasFocus | ControlGroup(6000).HasFocus] | [Player.HasAudio + Skin.HasSetting(musicfanarthome)]</visible>
                <animation effect="fade" time="600">Visible</animation>
                <animation effect="fade" time="600">Hidden</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="15000" pulse="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
                <animation effect="slide" start="-15,-15" end="15,15" time="7500" pulse="true" condition="Skin.HasSetting(animatedbghome)">Conditional</animation>
            </control>
            <!-- Music ExtraFanart -->
            <include condition="!IsEmpty(Skin.String(ArtistsLogosPath))">MusicExtraFanartHome</include>
            <include condition="Skin.HasSetting(artistslideshowhome)">MusicArtistSlideshowHome</include>
            <include>CommonMediaPlayingBackground</include>
            <include condition="Substring(Skin.String(backgroundlist),weatherworldbackground) + System.HasAddon(script.widget.weatherworld)">WorldWeatherIcons</include>
        </control>
        <!-- Home Fullscreen Video -->
        <control type="group">
            <visible>!Skin.HasSetting(DisableGlowbar)</visible>
            <include>Animation_VisibleChange400</include>
            <visible>![!IsEmpty(Window(home).Property(DisableWidgets)) + !Control.IsVisible(8995)]</visible>
            <visible>![!IsEmpty(Window(home).Property(DisableWidgets)) + Player.HasVideo + Skin.HasSetting(ShowBackgroundVideo)]</visible>
            <control type="image">
                <include>FullscreenDimensions</include>
                <colordiffuse>$INFO[Skin.String(BackgroundDarkness)]</colordiffuse>
                <texture>common/bgcolor.png</texture>
            </control>
            <control type="image">
                <posy>-150</posy>
                <width>1920</width>
                <height>608</height>
                <texture flipy="true">views/showcase_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <include>Animation_WindowFade200</include>
                <include>Animation_VisibleChange400</include>
                <animation effect="fade" start="100" end="80" time="5000" pulse="true" condition="true">conditional</animation>
                <visible>Skin.HasSetting(ExtendedGlowMode)</visible>
            </control>
            <control type="image">
                <posy>622</posy>
                <width>1920</width>
                <height>608</height>
                <texture>views/showcase_glow.png</texture>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                <include>Animation_WindowFade200</include>
                <include>Animation_VisibleChange400</include>
                <animation effect="fade" start="100" end="80" time="5000" pulse="true" condition="true">conditional</animation>
                <visible>Skin.HasSetting(ExtendedGlowMode)</visible>
            </control>
        </control>
        <include condition="Skin.HasSetting(effect_bg)">BG_Effect_Home</include>
        <!-- LiveTV Info -->
        <control type="group">
            <visible>Skin.HasSetting(DisableGlowbar) + IsEmpty(Window(home).Property(DisableWidgets))</visible>
            <include>Animation_VisibleChangeDelayed</include>
            <include>Animation_WindowFade200</include>
            <control type="image">
                <posy>480</posy>
                <width>1920</width>
                <height>600</height>
                <texture>home/nowplaying_shadow.png</texture>
                <visible>Control.HasFocus(8000) | Control.IsVisible(5000) | Substring(Control.GetLabel(4321),weather)</visible>
                <include>Animation_VisibleChangeDelayed</include>
                <animation effect="slide" time="400" tween="cubic" easing="inout" end="0,-225" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
            </control>
            <control type="image">
                <width>1920</width>
                <height>600</height>
                <texture flipy="true">home/nowplaying_shadow.png</texture>
                <include>Animation_VisibleChangeDelayed</include>
                <visible>Control.IsVisible(8995) | Control.HasFocus(7000) | Control.IsVisible(6000) | Substring(Control.GetLabel(4325),weather)</visible>
            </control>
        </control>
        <include>RSSPanel</include>
        <include>MainMenuBottomBar</include>
        <control type="group">
            <animation effect="slide" end="0,330" time="700" tween="cubic" delay="200" condition="!Skin.HasSetting(lowermainmenu) + !IsEmpty(Window(home).Property(PanelWidget2Info))">Conditional</animation>
            <animation effect="slide" end="0,-330" time="700" tween="cubic" delay="200" condition="!Skin.HasSetting(lowermainmenu) + !IsEmpty(Window(home).Property(PanelWidgetInfo))">Conditional</animation>
            <animation effect="slide" end="0,330" time="600" tween="cubic" delay="200" easing="inout" condition="!Skin.HasSetting(lowermainmenu) + Window.IsActive(1115)">Conditional</animation>
            <!-- Library Totals -->
            <include>LibraryStats</include>
            <!-- Time Panel-->
            <include>TimePanel</include>
            <!-- Alternate Stats + Time -->
            <include>AlternateTimeAndStats</include>
            <!-- RSS -->
            <control type="group">
                <include>FullscreenDimensions</include>
                <animation effect="slide" end="0,338" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(lowermainmenu)">Conditional</animation>
                <include>Animation_OpenCloseZoom</include>
                <control type="group">
                    <animation effect="zoom" end="80" center="960,520" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                    <!-- Submenu -->
                    <control type="image">
                        <posx>935</posx>
                        <posy>613</posy>
                        <width>50</width>
                        <height>15</height>
                        <colordiffuse>white</colordiffuse>
                        <texture>arrowdown.png</texture>
                        <!--                     <animation effect="slide" end="0,40" time="0" condition="[!Skin.HasSetting(rsshomelow) + !Skin.HasSetting(DisableRSS)]">Conditional</animation>
 -->
                        <visible>Control.HasFocus(9000) + !Skin.HasSetting(showsubmenu) + IntegerGreaterThan(Container(9010).NumItems,0)</visible>
                        <animation effect="zoom" start="100,0" end="100,100" time="500" delay="200" tween="cubic" center="0,613" easing="inout">VisibleChange</animation>
                    </control>
                    <control type="group" id="9001">
                        <posx>240</posx>
                        <posy>609</posy>
                        <animation effect="zoom" end="120" center="960,610" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                        <animation effect="fade" start="100" end="0" time="300" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
                        <animation effect="slide" end="0,-60" time="300" tween="cubic" easing="inout" condition="!Control.HasFocus(9010) + ![IntegerGreaterThan(Container(9010).NumItems,0) + Skin.HasSetting(showsubmenu)]">conditional</animation>
                        <control type="image">
                            <posx>70</posx>
                            <posy>3</posy>
                            <width>1300</width>
                            <height>87</height>
                            <texture>$VAR[SubMenuImageVar]</texture>
                            <colordiffuse>$VAR[ExtendedColorVar]</colordiffuse>
                        </control>
                        <include condition="Skin.HasSetting(submenufixedlist)">SubMenuFixedList</include>
                        <include condition="!Skin.HasSetting(submenufixedlist)">SubMenuWrapList</include>
                    </control>
                    <!-- Home OSD -->
                    <control type="group">
                        <visible>Player.HasMedia + System.IdleTime(8)</visible>
                        <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                        <posy>62</posy>
                        <width>1920</width>
                        <height>1080</height>
                        <animation effect="fade" end="100" time="750" condition="Player.HasAudio + System.IdleTime(8)">Conditional</animation>
                        <control type="progress">
                            <posy>452</posy>
                            <width>1920</width>
                            <height>96</height>
                            <info>Player.Progress</info>
                            <texturebg>osd/osd_progress_clear.png</texturebg>
                            <lefttexture>-</lefttexture>
                            <midtexture>osd/osd_progressmid.png</midtexture>
                            <righttexture>-</righttexture>
                        </control>
                    </control>
                    <!-- Home Menu Bar -->
                    <control type="image">
                        <posy>453</posy>
                        <width>1920</width>
                        <height>225</height>
                        <texture>$VAR[HomeMenuBackVar]</texture>
                        <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
                        <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                        <animation effect="fade" start="100" end="90" time="50" condition="Skin.HasSetting(glasshome) + ![Player.HasMedia + System.IdleTime(8)]">Conditional</animation>
                    </control>
                    <control type="image">
                        <posy>453</posy>
                        <width>1920</width>
                        <height>225</height>
                        <texture>home/homemenu_back_glow.png</texture>
                        <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
                        <animation effect="zoom" end="125,100" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                        <include>PanelGlowFade</include>
                        <include>Animation_VisibleChange400</include>
                        <visible>!Skin.HasSetting(DisableGlowbar) | [Skin.HasSetting(ExtendedGlowMode) + Skin.HasSetting(glasshome)] | Skin.HasSetting(classichome)</visible>
                    </control>
                    <!-- Home OSD -->
                    <control type="label">
                        <posy>445</posy>
                        <width>1920</width>
                        <height>225</height>
                        <align>center</align>
                        <font>Font_MainClassic</font>
                        <textcolor>$VAR[HomeMenuTextFocusVar]</textcolor>
                        <label>$VAR[HomeOSDLabelVar]</label>
                        <visible>Player.HasMedia + System.IdleTime(8)</visible>
                        <animation effect="fade" end="100" time="1050">Visible</animation>
                    </control>
                    <!-- Home Menu -->
                    <control type="button" id="8993">
                        <include>HiddenObject</include>
                        <onfocus>AlarmClock(WidgetMove,Control.Move(8000,1),00:07,silent,loop)</onfocus>
                        <onfocus>ClearProperty(PanelWidgetInfo,Home)</onfocus>
                        <onfocus>SetFocus(9000)</onfocus>
                    </control>
                    <control type="button" id="7993">
                        <include>HiddenObject</include>
                        <onfocus>AlarmClock(Widget2Move,Control.Move(7000,1),00:07,silent,loop)</onfocus>
                        <onfocus>SetFocus(9000)</onfocus>
                    </control>
                    <!--focus first widget-->
                    <control type="button" id="4444">
                        <include>HiddenObject</include>
                        <onfocus condition="Control.IsVisible(5000)">SetFocus(5000)</onfocus>
                        <onfocus condition="Control.IsVisible(8998)">CancelAlarm(WidgetMove,true)</onfocus>
                        <onfocus condition="Control.IsVisible(8998)">SetFocus(8000,0)</onfocus>
                        <onfocus condition="Control.IsVisible(8998)">SetFocus(8000)</onfocus>
                        <visible>Control.IsVisible(5000) | Control.IsVisible(8998)</visible>
                        <visible>IsEmpty(Window(home).Property(DisableWidgets))</visible>
                        <visible>!Substring(Control.GetLabel(4321),system)</visible>
                    </control>
                    <!--focus second widget-->
                    <control type="button" id="4445">
                        <include>HiddenObject</include>
                        <onfocus condition="Control.IsVisible(6000)">SetFocus(6000)</onfocus>
                        <onfocus condition="Control.IsVisible(7998)">CancelAlarm(Widget2Move,true)</onfocus>
                        <onfocus condition="Control.IsVisible(7998)">SetFocus(7000,0)</onfocus>
                        <onfocus condition="Control.IsVisible(7998)">SetFocus(7000)</onfocus>
                        <visible>Control.IsVisible(6000) | Control.IsVisible(7998)</visible>
                        <visible>IsEmpty(Window(home).Property(DisableWidgets))</visible>
                        <visible>!Substring(Control.GetLabel(4325),system)</visible>
                    </control>
                    <include condition="Skin.HasSetting(mainmenufixedlist)">MainMenuFixedList</include>
                    <include condition="!Skin.HasSetting(mainmenufixedlist)">MainMenuWrapList</include>
                    <control type="group">
                        <animation effect="zoom" end="125,99" center="960,500" time="400" tween="cubic" easing="inout" condition="Skin.HasSetting(smallermainmenu)">Conditional</animation>
                        <include>Furniture_ClassicHomeGradient</include>
                        <include>Neon_Home</include>
                    </control>
                </control>
            </control>
            <!--Weather info-->
            <!-- Music Info -->
        </control>
        <!-- Featured widget -->
        <control type="group">
            <visible>IsEmpty(Window(home).Property(PanelWidget2Info))</visible>
            <animation type="Visible">
                <effect type="zoom" delay="500" start="150" end="100" center="960,540" time="500" tween="cubic" />
                <effect type="fade" delay="500" end="100" time="300" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="300" />
                <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
            </animation>
            <include condition="Substring(Skin.String(widgetlist),featured) | Substring(Skin.String(widgetlist),panel)">HomePanelWidget</include>
            <include condition="!IsEmpty(Weather.Plugin) + SubString(Skin.String(widgetlist),weather)">Weather_Widget</include>
            <include>RecentWidget</include>
        </control>
        <control type="group">
            <visible>IsEmpty(Window(home).Property(PanelWidgetInfo))</visible>
            <animation type="Visible">
                <effect type="zoom" delay="500" start="150" end="100" center="960,540" time="500" tween="cubic" />
                <effect type="fade" delay="500" end="100" time="300" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="300" />
                <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
            </animation>
            <include condition="Substring(Skin.String(widget2list),featured) | Substring(Skin.String(widget2list),panel)">HomePanelWidget2</include>
            <include condition="!IsEmpty(Weather.Plugin) + SubString(Skin.String(widget2list),weather)">Weather_Widget2</include>
            <include>RecentWidget2</include>
        </control>
        <include condition="!Skin.HasSetting(nohomepageMusicinfo) | !Skin.HasSetting(homepageVideoinfo)">Furniture_HomeNowPlaying</include>
        <control type="group">
            <visible>!IsEmpty(Window(home).Property(DisableWidgets)) + !Player.HasMedia + !Window.IsActive(1115)</visible>
            <include>Animation_WindowFade200</include>
            <animation type="Visible">
                <effect type="zoom" start="150" end="100" center="960,540" time="500" tween="cubic" />
                <effect type="fade" end="100" time="300" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="300" />
                <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
            </animation>
            <posx>50</posx>
            <posy>50</posy>
            <control type="image">
                <width>170</width>
                <height>80</height>
                <include>PanelGlowFade</include>
                <texture>dialogs/dialog_back_shadow.png</texture>
                <visible>!Skin.HasSetting(DisableGlowbar)</visible>
                <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
            </control>
            <control type="image">
                <width>170</width>
                <height>80</height>
                <animation effect="fade" end="60" time="0" condition="true">Conditional</animation>
                <texture>dialogs/dialog_back.png</texture>
                <colordiffuse>$VAR[DialogColorVar]</colordiffuse>
            </control>
            <control type="image">
                <posx>5</posx>
                <posy>12</posy>
                <width>70</width>
                <height>52</height>
                <colordiffuse>white</colordiffuse>
                <texture>special://skin/extras/BigIcons/ButtonBack.png</texture>
                <aspectratio aligny="top">scale</aspectratio>
            </control>
            <control type="label">
                <posx>65</posx>
                <width>100</width>
                <height>74</height>
                <font>Font_Reg14</font>
                <textcolor>grey2</textcolor>
                <align>center</align>
                <label>$LOCALIZE[42264]</label>
                <fontcolor>white</fontcolor>
                <wrapmultiline>true</wrapmultiline>
            </control>
        </control>
        <control type="group">
            <control type="image">
                <include>FullscreenDimensions</include>
                <colordiffuse>black</colordiffuse>
                <visible>Control.HasFocus(22222) | Control.HasFocus(22223) | !IsEmpty(Window(home).Property(weatherwidget))</visible>
                <animation effect="fade" start="100" end="70" time="50" condition="!Control.HasFocus(9000)">Conditional</animation>
                <include>Animation_VisibleChange400</include>
                <texture>common/white.png</texture>
            </control>
            <control type="image">
                <fadetime>600</fadetime>
                <include>FullscreenDimensions</include>
                <aspectratio align="center" aligny="top">keep</aspectratio>
                <texture background="true">$VAR[HomeFSImageVar]</texture>
                <animation effect="fade" time="500">Visible</animation>
                <animation effect="fade" time="500">Hidden</animation>
                <visible>Control.HasFocus(22222) | Control.HasFocus(22223)</visible>
            </control>
            <control type="group">
                <visible>!IsEmpty(Window(home).Property(weatherwidget))</visible>
                <control type="multiimage">
                    <include>FullscreenDimensions</include>
                    <imagepath>$INFO[Window(weather).Property(MapPath)]</imagepath>
                    <timeperimage>500</timeperimage>
                    <pauseatend>1000</pauseatend>
                    <fadetime>0</fadetime>
                    <randomize>false</randomize>
                    <loop>yes</loop>
                    <aspectratio>keep</aspectratio>
                    <aligny>center</aligny>
                </control>
                <control type="image">
                    <posx>500</posx>
                    <posy>990</posy>
                    <width>920</width>
                    <height>47</height>
                    <texture>weather/whitepanel.png</texture>
                </control>
                <control type="image">
                    <posx>480</posx>
                    <posy>992</posy>
                    <width>506</width>
                    <height>42</height>
                    <texture>weather/key1.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="image">
                    <posx>930</posx>
                    <posy>992</posy>
                    <width>506</width>
                    <height>42</height>
                    <texture>weather/key2.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
            </control>
            <control type="button" id="22222">
                <include>HiddenObject</include>
                <onleft>Control.Move(5010,-1)</onleft>
                <onright>Control.Move(5010,1)</onright>
                <onup>Control.Move(5010,1)</onup>
                <ondown>Control.Move(5010,-1)</ondown>
                <onback>SetFocus(5010)</onback>
            </control>
            <control type="button" id="22223">
                <include>HiddenObject</include>
                <onleft>Control.Move(6010,-1)</onleft>
                <onright>Control.Move(6010,1)</onright>
                <onup>Control.Move(6010,1)</onup>
                <ondown>Control.Move(6010,-1)</ondown>
                <onback>SetFocus(6010)</onback>
            </control>
        </control>
    </controls>
</window>